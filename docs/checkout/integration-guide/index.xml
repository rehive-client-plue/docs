<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Integration guide on Documentation</title>
    <link>https://plue.io/checkout/integration-guide/</link>
    <description>Recent content in Integration guide on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Sep 2018 15:21:22 +0200</lastBuildDate>
    
	<atom:link href="https://plue.io/checkout/integration-guide/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview</title>
      <link>https://plue.io/checkout/integration-guide/overview/</link>
      <pubDate>Mon, 17 Sep 2018 15:21:22 +0200</pubDate>
      
      <guid>https://plue.io/checkout/integration-guide/overview/</guid>
      <description>Accepting payments with Plue Checkout is a three step process, with client side and server side actions.
From your website running in the customer’s browser, Plue securely collects your customer’s authentication details and returns an authentication token. This, along with any other form data, is then submitted by the browser to the Plue server. Your application can pull the customer’s account balance and let the customer choose a Plue account to make a payment.</description>
    </item>
    
    <item>
      <title>1. Authentication</title>
      <link>https://plue.io/checkout/integration-guide/authentication/</link>
      <pubDate>Mon, 17 Sep 2018 15:21:22 +0200</pubDate>
      
      <guid>https://plue.io/checkout/integration-guide/authentication/</guid>
      <description>The customer arrives on your web page in the browser and selects the Pay with Plue checkout option. The customer is prompted to authenticate their Plue account by providing their email and password.
Endpoints    URL methods     https://api.plue.io/3/auth/login/ POST    Javascript example code: plue.auth.login({ user: &amp;quot;joe@example.com&amp;quot;, company: &amp;quot;plue_prod&amp;quot;, password: &amp;quot;joe1234&amp;quot; }).then(function(user){ ... },function(err){ ... })  Note: the company field should be hardcoded to the value &#34;</description>
    </item>
    
    <item>
      <title>2. Balance check</title>
      <link>https://plue.io/checkout/integration-guide/balance/</link>
      <pubDate>Mon, 17 Sep 2018 15:21:22 +0200</pubDate>
      
      <guid>https://plue.io/checkout/integration-guide/balance/</guid>
      <description>The customer&amp;rsquo;s account balance is pulled. You can decide if you want to allow the customer to change their preferred account or currency to make a payment. The customer can see their available balance for the selected accounts as well as the currency conversion rate that matches the currency specified in the order. The customer can change the amount they would need to pay in the currency specified in the order and validate the underlying currency amount that will be charged to their account.</description>
    </item>
    
    <item>
      <title>3. Payment</title>
      <link>https://plue.io/checkout/integration-guide/payment/</link>
      <pubDate>Mon, 17 Sep 2018 15:21:22 +0200</pubDate>
      
      <guid>https://plue.io/checkout/integration-guide/payment/</guid>
      <description>The transaction is posted to Plue from your client-side code (the post can also be made from server-side code if preferred). Plue will trigger a webhook to your server that includes the transaction details to process the rest of your order. It is important that your server-side code cross-references the order_id in the metadata and the transaction status before releasing the order.
Endpoints    URL methods     https://api.</description>
    </item>
    
  </channel>
</rss>